import {windowColor, indoorColor, brick, foundation, shadows} from './materials.js';

export default (scene) => {
  var office = new THREE.Group()
  var door = new THREE.BoxGeometry(2, 2.3, .2)
  door.translate(0, 1.6, 0)
  var wins = new THREE.Mesh(door, windowColor)
	wins.position.set(0, .3, 0)
  wins.castShadow = true
  office.add(wins)
  var indoors = new THREE.BoxGeometry(3, 7, 3.3)
  indoors.translate(0, 4.35, -1.8)
  var indoorLight = new THREE.Mesh(indoors, indoorColor)
  office.add(indoorLight)
  var base = new THREE.Geometry()
  var left = new THREE.BoxGeometry(.5, 7.5, 1)
  left.translate(-1.6, 0, 1.5)
	base.merge(left)
  var left1 = new THREE.BoxGeometry(.5, 7.5, 1)
  left1.translate(-1.6, 0, 0)
	base.merge(left1)
  var left2 = new THREE.BoxGeometry(.5, 7.5, 1)
  left2.translate(-1.6, 0, -1.5)
	base.merge(left2)
  var left3 = new THREE.BoxGeometry(.5, 3.3, 4)
  left3.translate(-1.6, -2.1, 0)
	base.merge(left3)
  var bottomLeft = new THREE.BoxGeometry(.5, 3.3, 4)
  bottomLeft.translate(-1.1, -2.1, 0)
	base.merge(bottomLeft)
  var bottomMiddle = new THREE.BoxGeometry(2, 1, 4)
  bottomMiddle.translate(0, -.95, 0)
	base.merge(bottomMiddle)
  var middle = new THREE.BoxGeometry(3, 3.3, 3)
  middle.translate(0, -2.1, -.5)
	base.merge(middle)
  var bottomRight = new THREE.BoxGeometry(.5, 3.3, 4)
  bottomRight.translate(1.25, -2.1, 0)
	base.merge(bottomRight)
  var right = new THREE.BoxGeometry(.5, 7.5, 1)
  right.translate(1.6, 0, 1.5)
	base.merge(right)
  var right1 = new THREE.BoxGeometry(.5, 7.5, 1)
  right1.translate(1.6, 0, 0)
	base.merge(right1)
  var right2 = new THREE.BoxGeometry(.5, 7.5, 1)
  right2.translate(1.6, 0, -1.5)
	base.merge(right2)
  var right3 = new THREE.BoxGeometry(.5, 3.3, 4)
  right3.translate(1.6, -2.1, 0)
	base.merge(right3)
  var Middle1 = new THREE.BoxGeometry(.6, 4, 4)
  Middle1.translate(-.55, 1.5, 0)
	base.merge(Middle1)
  var Middle2 = new THREE.BoxGeometry(.6, 4, 4)
  Middle2.translate(.55, 1.5, 0)
	base.merge(Middle2)
  var Middle3 = new THREE.BoxGeometry(.05, 3.3, 4)
  Middle3.translate(.1, -2.1, 0)
	base.merge(Middle3)
  var MiddleA = new THREE.BoxGeometry(3.7, 1, 4)
  MiddleA.translate(0, .55, 0)
	base.merge(MiddleA)
  var MiddleB = new THREE.BoxGeometry(3.7, 1, 4)
  MiddleB.translate(0, 2.05, 0)
	base.merge(MiddleB)
  var MiddleC = new THREE.BoxGeometry(3.7, .7, 4)
  MiddleC.translate(0, 3.4, 0)
	base.merge(MiddleC)
	//detail
  var bricks = new THREE.BoxGeometry(.5, .25, .25)
  bricks.translate(-.7, -1, -1.89)
	base.merge(bricks)
  bricks.translate(-.25, -.25, 0)
	base.merge(bricks)
  bricks.translate(2, -1, 0)
	base.merge(bricks)
  var bricks = new THREE.BoxGeometry(.25, .25, .5)
  bricks.translate(1.75, 2.25, .5)
	base.merge(bricks)
  bricks.translate(0, -.25, -.25)
	base.merge(bricks)
  bricks.translate(0, -3, -1.5)
	base.merge(bricks)
  bricks.translate(0, -.25, .25)
	base.merge(bricks)
  bricks.translate(0, -1, 1.5)
	base.merge(bricks)
  bricks.translate(-3.5, 0, 0)
	base.merge(bricks)
  bricks.translate(0, .25, -.25)
	base.merge(bricks)
  bricks.translate(0, 2.5, -1.5)
	base.merge(bricks)
  bricks.translate(0, .25, .25)
	base.merge(bricks)
  bricks.translate(0, 1.5, 1.5)
	base.merge(bricks)
	//buidling assemble
  var building = new THREE.Mesh(base, brick)
  building.position.set(0, 4.5, -1.8)
  building.castShadow = true
  office.add(building)
  var buildingLeft = new THREE.BoxGeometry(.5, 3.3, 4)
  buildingLeft.translate(-1.65, -2.1, -.05)
  var buildingLeftStep = new THREE.BoxGeometry(.5, .5, 4.1)
  buildingLeftStep.translate(-1.8, -3.7, -.02)
	buildingLeft.merge(buildingLeftStep)
  var buildingLeftShadow = new THREE.Mesh(buildingLeft, shadows)
  buildingLeftShadow.position.set(0, 4.5, -1.8)
	buildingLeftShadow.receiveShadow = true
  office.add(buildingLeftShadow)
  // foundation
  var found = new THREE.BoxGeometry(4, .5, 4.2)
	var step = new THREE.BoxGeometry(2, .25, .5)
  step.translate(.05, -.13, 2)
	found.merge(step)
  var buildingFound = new THREE.Mesh(found, foundation)
  buildingFound.position.set(0, .75, -1.8)
  buildingFound.castShadow = true
  office.add(buildingFound)
  // roof
	var cap = new THREE.Geometry()
  var capLeft = new THREE.BoxGeometry(.25, .5, 4.2)
	capLeft.translate(-1.8, 0, 0)
	cap.merge(capLeft)
  var capRight = new THREE.BoxGeometry(.25, .5, 4.2)
	capRight.translate(1.8, 0, 0)
	cap.merge(capRight)
  var capBack = new THREE.BoxGeometry(3.85, .5, .25)
	capBack.translate(0, 0, -1.98)
	cap.merge(capBack)
  var capFront = new THREE.BoxGeometry(3.85, .5, .25)
	capFront.translate(0, 0, 1.98)
	cap.merge(capFront)
  var roof = new THREE.Mesh(cap, foundation)
  roof.position.set(0, 8.25, -1.8)
  roof.castShadow = true
  office.add(roof)
  // Add to scene
  office.position.set(-10, -.5, -6)
	office.scale.set(1.7, 1.7, 1.7)
  scene.add(office)
}
